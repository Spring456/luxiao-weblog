(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{765:function(v,_,e){"use strict";e.r(_);var p=e(2),t=Object(p.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"浏览器安全简要介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器安全简要介绍"}},[v._v("#")]),v._v(" 浏览器安全简要介绍")]),v._v(" "),_("p",[v._v("浏览器安全问题主要有：XSS攻击、CSRF攻击")]),v._v(" "),_("h3",{attrs:{id:"xss"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[v._v("#")]),v._v(" XSS")]),v._v(" "),_("p",[_("strong",[v._v("一、什么是XSS?")])]),v._v(" "),_("blockquote",[_("p",[v._v("XSS是Cross-Site Scripting("),_("code",[v._v("跨站脚本攻击")]),v._v(")的简称。是一种代码注入攻击。")])]),v._v(" "),_("p",[v._v("主要手段：攻击者通过向目标网站注入恶意脚本，这些脚本和正常代码混在一起，浏览器并不能分辨哪个脚本是安全的，导致恶意脚本被执行，利用这些脚本，攻击可以获取到如Cookie,Session等。拿到这些信息冒充用户向网站发起攻击。")]),v._v(" "),_("p",[_("strong",[v._v("XSS攻击思路")])]),v._v(" "),_("p",[v._v("浏览器解析HTML时，遇到script标签会执行其中的js代码。而有些恶意代码就藏在script里面。")]),v._v(" "),_("p",[_("strong",[v._v("二、XSS可以做哪些操作？")])]),v._v(" "),_("p",[v._v("主要有：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("获取页面数据：如DOM、cookie、session")])]),v._v(" "),_("li",[_("p",[v._v("DOS攻击，发送合理请求，占用服务器资源")])]),v._v(" "),_("li",[_("p",[v._v("流量挟持，将链接指向其他网站")])]),v._v(" "),_("li",[_("p",[v._v("破坏页面结构")])])]),v._v(" "),_("p",[_("strong",[v._v("三、恶意脚本注入方式")])]),v._v(" "),_("p",[_("code",[v._v("1、存储型XSS攻击")])]),v._v(" "),_("p",[v._v("存储型是针对服务端而言。攻击者将恶意脚本存储到有漏洞的服务器上，浏览器访问恶意代码的页面，就会将用户信息上传到服务器上，被攻击者获取。")]),v._v(" "),_("p",[_("code",[v._v("2、反射型XSS攻击")])]),v._v(" "),_("p",[v._v("用户将一段含有恶意代码的请求提交给 Web 服务器，Web 服务器接收到请求时，又将恶意代码反射给了浏览器端。恶意代码窃取⽤户数据并发送到攻击者的⽹站，或者冒充⽤户的⾏为，调⽤⽬标⽹站接⼝执⾏攻击者指定的操作")]),v._v(" "),_("p",[v._v("3、"),_("code",[v._v("基于DOM的XSS攻击")]),v._v("。在Web资源传输过程或者在用户使用页面的过程中修改Web页面的数据。比如通过网络劫持在页面传输过程中修改 HTML 页面的内容")]),v._v(" "),_("p",[_("strong",[v._v("五、如何防范XSS攻击")])]),v._v(" "),_("p",[v._v("1、对需要插入到 HTML 中的代码做好充分的转义(vue/react已经避免了类似问题，比如不能在template里写script标签，无法在js里通过ref或append方式动态添加script标签)")]),v._v(" "),_("p",[v._v("2、对于数据获取渲染和字符串拼接的时候应该对可能出现的恶意代码情况进行判断")]),v._v(" "),_("p",[v._v("3、使用 CSP,建立一个白名单，告诉浏览器哪些外部资源可以加载和执行，从而防止恶意代码的注入攻击。")]),v._v(" "),_("p",[v._v("4、设置cookie的http-only属性，使得脚本无法获取。也可以使用验证码，避免脚本伪装成用户执行一些操作")]),v._v(" "),_("p",[v._v("5、重要内容加密传输")]),v._v(" "),_("h3",{attrs:{id:"csrf"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[v._v("#")]),v._v(" CSRF")]),v._v(" "),_("p",[_("strong",[v._v("一、什么是CSRF")])]),v._v(" "),_("blockquote",[_("p",[v._v("CSRF 攻击指的是跨站请求伪造攻击")])]),v._v(" "),_("p",[v._v("攻击者盗用了你的身份，以你的名义进行恶意请求")]),v._v(" "),_("p",[_("strong",[v._v("二、CSRF攻击方式")])]),v._v(" "),_("p",[v._v("攻击者诱导用户进入一个第三方网站，然后该网站向被攻击网站发送跨站请求。如果用户在被攻击网站中保存了登录状态，那么攻击者就可以利用这个登录状态，绕过后台的用户验证，冒充用户向服务器执行一些操作。")]),v._v(" "),_("p",[v._v("CSRF攻击思想：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("1、浏览并登录信任网站（举例：淘宝）")])]),v._v(" "),_("li",[_("p",[v._v("2、登录成功后在浏览器产生信息存储（举例：cookie）")])]),v._v(" "),_("li",[_("p",[v._v("3、用户在没有登出淘宝的情况下，访问危险网站")])]),v._v(" "),_("li",[_("p",[v._v("4、危险网站中存在恶意代码，代码为发送一个恶意请求（举例：购买商品/余额转账）")])]),v._v(" "),_("li",[_("p",[v._v("5、携带刚刚在浏览器产生的信息进行恶意请求")])]),v._v(" "),_("li",[_("p",[v._v("6、淘宝验证请求为合法请求（区分不出是否是该用户发送）")])]),v._v(" "),_("li",[_("p",[v._v("7、达到了恶意目标")])])]),v._v(" "),_("p",[_("strong",[v._v("三、CSRF攻击方式")])]),v._v(" "),_("p",[v._v("1、GET 类型的 CSRF 攻击，比如在网站中的一个 img 标签里构建一个请求，当用户打开这个网站的时候就会自动发起提交。")]),v._v(" "),_("p",[v._v("2、POST 类型的 CSRF 攻击，比如构建一个表单，然后隐藏它，当用户进入页面时，自动提交这个表单。")]),v._v(" "),_("p",[v._v("3、链接类型的 CSRF 攻击，比如在 a 标签的 href 属性里构建一个请求，然后诱导用户去点击。")]),v._v(" "),_("p",[_("strong",[v._v("四、如何防范CSRF攻击")])]),v._v(" "),_("p",[_("code",[v._v("1、同源策略")])]),v._v(" "),_("p",[_("code",[v._v("2、使用 CSRF Token 进行验证")])]),v._v(" "),_("p",[v._v("服务器向用户返回一个随机数 Token ，当网站再次发起请求时，在请求参数中加入服务器端返回的 token ，然后服务器对这个 token 进行验证")]),v._v(" "),_("p",[_("code",[v._v("3、对 Cookie 进行双重验证")])]),v._v(" "),_("p",[v._v("服务器在用户访问网站页面时，向请求域名注入一个Cookie，内容为随机字符串，然后当用户再次向服务器发送请求的时候，从 cookie 中取出这个字符串，添加到 URL 参数中，然后服务器通过对 cookie 中的数据和参数中的数据进行比较，来进行验证")]),v._v(" "),_("p",[v._v("4、设置 cookie 属性的时候设置 Samesite ，限制 cookie 不能作为被第三方使用")]),v._v(" "),_("p",[v._v("5、HTTP 协议中使用 Referer 属性来确定请求来源进行过滤")]),v._v(" "),_("p",[v._v("6、添加密码，验证码验证")]),v._v(" "),_("h3",{attrs:{id:"浏览器设置的安全策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器设置的安全策略"}},[v._v("#")]),v._v(" 浏览器设置的安全策略")]),v._v(" "),_("p",[_("code",[v._v("1、同源策略")])]),v._v(" "),_("p",[v._v("不同域是无法跨域请求的。浏览器在此基础上引入了跨域资源共享策略--CORS。使用该机制可以进行跨域访问控制，从而使跨域数据传输得以安全进行")]),v._v(" "),_("p",[_("code",[v._v("2、内容安全策略")])]),v._v(" "),_("p",[v._v("页面中可以引入第三方资源，可能会导致XSS攻击，因此引入内容安全策略--CSP。让服务器决定浏览器能够加载哪些资源，让服务器决定浏览器是否能够执行内联 JavaScript 代码。")]),v._v(" "),_("p",[_("code",[v._v("3、跨文档消息机制")])]),v._v(" "),_("p",[v._v("不同源的DOM是不能互相通信的，浏览器引入跨文档消息机制，可以使用window.postMessage 的 JavaScript 接口来和不同源的 DOM 进行通信。")]),v._v(" "),_("p",[v._v("文章阅读："),_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/83865185",target:"_blank",rel:"noopener noreferrer"}},[v._v("前端安全问题汇总（实战）"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=t.exports}}]);